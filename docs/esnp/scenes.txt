https://github.com/catyguan/bma.java.esp

[加法运算]
客户端调用服务器加法运算服务获取a+b的运算结果

[hello消息]
客户端发送服务器hello消息，服务器接收后响应回执，并在服务端终端打印"hello world"内容

[ping事件]
客户端发送服务器hello消息，服务器接收后在服务端终端打印"ping"内容

[错误响应]
客户端调用服务器加法运算服务，不传递a,b参数，服务器响应相关错误信息

[超大文件下载]
客户端获取服务器的1G大小的文件，保存到本地硬盘

[分布式运算]
采用分布式方案实现：(a1+b1)*(a2+b2)*(a3+b3)
同时
	使用C1客户端发送加法a1+b1
	使用C2客户端发送加法a2+b2
	使用C3客户端发送加法a3+b3
然后把C1,C2,C3的结果相乘

[访问IP限制]
服务器的某个服务，只能有指定的IP访问

[会话登录和访问控制]
客户端连接服务器后，需要进行登录操作，然后才能调用服务器的其他服务接口。
服务器的服务接口可以按照登录用户控制访问。
登录状态在连接关闭后失效。

[会话功能]
客户端在建立会话以后，可以调用服务器的特定功能调用
如：分3步流程的注册功能

[监控运行状态]
客户端连接服务器后，服务器定时（如1秒）发送服务器运行状态到客户端

[代理服务器][请求分发][负载均衡]
客户端调用该服务器的请求，会转发到实际处理的业务服务器

[协议转发]
提供外部服务器接口，让用户可以采用HTTP调用ESNP协议的接口，并返回响应数据
可用于快速接口调试

[故障转移]
客户端调用主服务器失败，会自动切换到后备服务器进行调用

[调用跟踪]
对加法服务的具体一次请求调用，进行调用跟踪，获取具体调用过程的情况

[P2P模式]
2个对等的端进行连接和通信

[请求多发1]
客户端发送hello消息，中间件把消息发给多个服务器（失败场景如何处理？）

[请求多发2]
客户端发送a+b请求，中间件把请求发给多个服务器进行运算，并返回最先响应的结果

[连接空闲关闭]
客户端连接服务器后，如果10秒里没有任何动作，则服务器关闭相关连接

[防止连接空闲关闭]
客户端连接服务器后，每隔一段时间（3秒）发送ping事件，防止空闲关闭
