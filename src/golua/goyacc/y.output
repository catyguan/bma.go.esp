
0: shift/reduce conflict (shift 6(0), red'n 7(0)) on DO
0: shift/reduce conflict (shift 16(0), red'n 7(0)) on FOR
0: shift/reduce conflict (shift 11(0), red'n 7(0)) on FUNCTION
0: shift/reduce conflict (shift 10(0), red'n 7(0)) on IF
0: shift/reduce conflict (shift 14(0), red'n 7(0)) on LOCAL
0: shift/reduce conflict (shift 9(0), red'n 7(0)) on REPEAT
0: shift/reduce conflict (shift 7(0), red'n 7(0)) on WHILE
0: shift/reduce conflict (shift 15(0), red'n 7(0)) on CLOSURE
0: shift/reduce conflict (shift 19(0), red'n 7(0)) on NAME
state 0
	$accept: .Chunk $end 
	StatList: .    (7)

	DO  shift 6
	FOR  shift 16
	FUNCTION  shift 11
	IF  shift 10
	LOCAL  shift 14
	REPEAT  shift 9
	WHILE  shift 7
	CLOSURE  shift 15
	NAME  shift 19
	.  reduce 7 (src line 63)

	Chunk  goto 1
	Block  goto 2
	StatList  goto 3
	Stat  goto 4
	Binding  goto 5
	Repetition  goto 8
	SetList  goto 12
	FuncCall  goto 13
	Var  goto 17
	PrefixExp  goto 18

state 1
	$accept:  Chunk.$end 

	$end  accept
	.  error


state 2
	Chunk:  Block.    (1)

	.  reduce 1 (src line 50)


state 3
	Block:  StatList.    (2)
	Block:  StatList.LastStat 
	StatList:  StatList.Stat 

	BREAK  shift 22
	DO  shift 6
	FOR  shift 16
	FUNCTION  shift 11
	IF  shift 10
	LOCAL  shift 14
	RETURN  shift 23
	REPEAT  shift 9
	WHILE  shift 7
	CLOSURE  shift 15
	NAME  shift 19
	.  reduce 2 (src line 53)

	LastStat  goto 20
	Stat  goto 21
	Binding  goto 5
	Repetition  goto 8
	SetList  goto 12
	FuncCall  goto 13
	Var  goto 17
	PrefixExp  goto 18

state 4
	StatList:  Stat.    (5)

	.  reduce 5 (src line 60)


state 5
	Stat:  Binding.    (8)

	.  reduce 8 (src line 65)


6: shift/reduce conflict (shift 6(0), red'n 7(0)) on DO
6: shift/reduce conflict (shift 16(0), red'n 7(0)) on FOR
6: shift/reduce conflict (shift 11(0), red'n 7(0)) on FUNCTION
6: shift/reduce conflict (shift 10(0), red'n 7(0)) on IF
6: shift/reduce conflict (shift 14(0), red'n 7(0)) on LOCAL
6: shift/reduce conflict (shift 9(0), red'n 7(0)) on REPEAT
6: shift/reduce conflict (shift 7(0), red'n 7(0)) on WHILE
6: shift/reduce conflict (shift 15(0), red'n 7(0)) on CLOSURE
6: shift/reduce conflict (shift 19(0), red'n 7(0)) on NAME
state 6
	Stat:  DO.Block END 
	StatList: .    (7)

	DO  shift 6
	FOR  shift 16
	FUNCTION  shift 11
	IF  shift 10
	LOCAL  shift 14
	REPEAT  shift 9
	WHILE  shift 7
	CLOSURE  shift 15
	NAME  shift 19
	.  reduce 7 (src line 63)

	Block  goto 24
	StatList  goto 3
	Stat  goto 4
	Binding  goto 5
	Repetition  goto 8
	SetList  goto 12
	FuncCall  goto 13
	Var  goto 17
	PrefixExp  goto 18

state 7
	Stat:  WHILE.Exp DO Block END 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 25
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 8
	Stat:  Repetition.DO Block END 

	DO  shift 44
	.  error


9: shift/reduce conflict (shift 6(0), red'n 7(0)) on DO
9: shift/reduce conflict (shift 16(0), red'n 7(0)) on FOR
9: shift/reduce conflict (shift 11(0), red'n 7(0)) on FUNCTION
9: shift/reduce conflict (shift 10(0), red'n 7(0)) on IF
9: shift/reduce conflict (shift 14(0), red'n 7(0)) on LOCAL
9: shift/reduce conflict (shift 9(0), red'n 7(0)) on REPEAT
9: shift/reduce conflict (shift 7(0), red'n 7(0)) on WHILE
9: shift/reduce conflict (shift 15(0), red'n 7(0)) on CLOSURE
9: shift/reduce conflict (shift 19(0), red'n 7(0)) on NAME
state 9
	Stat:  REPEAT.UBlock 
	StatList: .    (7)

	DO  shift 6
	FOR  shift 16
	FUNCTION  shift 11
	IF  shift 10
	LOCAL  shift 14
	REPEAT  shift 9
	WHILE  shift 7
	CLOSURE  shift 15
	NAME  shift 19
	.  reduce 7 (src line 63)

	Block  goto 46
	StatList  goto 3
	UBlock  goto 45
	Stat  goto 4
	Binding  goto 5
	Repetition  goto 8
	SetList  goto 12
	FuncCall  goto 13
	Var  goto 17
	PrefixExp  goto 18

state 10
	Stat:  IF.Conds END 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 50
	Conds  goto 47
	FuncCall  goto 41
	CondList  goto 48
	Cond  goto 49
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 11
	Stat:  FUNCTION.FuncName FuncBody 

	NAME  shift 53
	.  error

	FuncName  goto 51
	DottedName  goto 52

state 12
	Stat:  SetList.= ExpList 
	SetList:  SetList., Var 

	=  shift 54
	,  shift 55
	.  error


state 13
	Stat:  FuncCall.    (16)
	PrefixExp:  FuncCall.    (71)

	(  reduce 71 (src line 172)
	:  reduce 71 (src line 172)
	.  reduce 71 (src line 172)
	[  reduce 71 (src line 172)
	.  reduce 16 (src line 77)


state 14
	Binding:  LOCAL.NameList 
	Binding:  LOCAL.NameList = ExpList 
	Binding:  LOCAL.FUNCTION NAME FuncBody 

	FUNCTION  shift 57
	NAME  shift 58
	.  error

	NameList  goto 56

state 15
	Binding:  CLOSURE.( NameList ) 
	Binding:  CLOSURE.NameList 

	NAME  shift 58
	(  shift 59
	.  error

	NameList  goto 60

state 16
	Repetition:  FOR.NAME = ExpList 
	Repetition:  FOR.Name2 IN ExpList 

	NAME  shift 61
	.  error

	Name2  goto 62

state 17
	SetList:  Var.    (32)
	PrefixExp:  Var.    (70)

	=  reduce 32 (src line 111)
	,  reduce 32 (src line 111)
	.  reduce 70 (src line 170)


state 18
	Var:  PrefixExp.[ Exp ] 
	Var:  PrefixExp.. NAME 
	FuncCall:  PrefixExp.Args 
	FuncCall:  PrefixExp.: NAME Args 

	(  shift 67
	:  shift 66
	.  shift 64
	[  shift 63
	.  error

	Args  goto 65

state 19
	Var:  NAME.    (67)

	.  reduce 67 (src line 162)


state 20
	Block:  StatList LastStat.    (3)

	.  reduce 3 (src line 55)


state 21
	StatList:  StatList Stat.    (6)

	.  reduce 6 (src line 62)


state 22
	LastStat:  BREAK.    (24)

	.  reduce 24 (src line 94)


state 23
	LastStat:  RETURN.    (25)
	LastStat:  RETURN.ExpList 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  reduce 25 (src line 96)

	Exp  goto 69
	ExpList  goto 68
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 24
	Stat:  DO Block.END 

	END  shift 70
	.  error


state 25
	Stat:  WHILE Exp.DO Block END 
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 

	AND  shift 73
	DO  shift 71
	OR  shift 72
	SLTEQ  shift 84
	SGTEQ  shift 85
	SEQ  shift 86
	SNOTEQ  shift 87
	STRADD  shift 75
	<  shift 82
	>  shift 83
	+  shift 77
	-  shift 76
	*  shift 78
	/  shift 79
	%  shift 81
	^  shift 80
	.  error

	LogicOp  goto 74

state 26
	Exp:  NIL.    (38)

	.  reduce 38 (src line 129)


state 27
	Exp:  TRUE.    (39)

	.  reduce 39 (src line 131)


state 28
	Exp:  FALSE.    (40)

	.  reduce 40 (src line 132)


state 29
	Exp:  NUMBER.    (41)

	.  reduce 41 (src line 133)


state 30
	Exp:  STRING.    (42)

	.  reduce 42 (src line 134)


state 31
	Exp:  MORE.    (43)

	.  reduce 43 (src line 135)


state 32
	Exp:  FuncDef.    (44)

	.  reduce 44 (src line 136)


state 33
	Exp:  PrefixExp.    (45)
	Var:  PrefixExp.[ Exp ] 
	Var:  PrefixExp.. NAME 
	FuncCall:  PrefixExp.Args 
	FuncCall:  PrefixExp.: NAME Args 

	(  shift 67
	:  shift 66
	.  shift 64
	[  shift 63
	.  reduce 45 (src line 137)

	Args  goto 65

state 34
	Exp:  Tableconstructor.    (46)

	.  reduce 46 (src line 138)


state 35
	Exp:  Arrayconstructor.    (47)

	.  reduce 47 (src line 139)


state 36
	Exp:  NOT.Exp 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 88
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 37
	Exp:  #.Exp 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 89
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 38
	Exp:  -.Exp 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 90
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 39
	FuncDef:  FUNCTION.FuncBody 

	(  shift 93
	.  error

	FuncBody  goto 91
	ParamDefList  goto 92

state 40
	PrefixExp:  Var.    (70)

	.  reduce 70 (src line 170)


state 41
	PrefixExp:  FuncCall.    (71)

	.  reduce 71 (src line 172)


state 42
	Tableconstructor:  {.} 
	Tableconstructor:  {.FieldList } 
	Tableconstructor:  {.FieldList , } 

	NAME  shift 97
	[  shift 98
	}  shift 94
	.  error

	FieldList  goto 95
	Field  goto 96

state 43
	Arrayconstructor:  [.] 
	Arrayconstructor:  [.ExpList ] 
	Arrayconstructor:  [.ExpList , ] 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	]  shift 99
	{  shift 42
	.  error

	Exp  goto 69
	ExpList  goto 100
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

44: shift/reduce conflict (shift 6(0), red'n 7(0)) on DO
44: shift/reduce conflict (shift 16(0), red'n 7(0)) on FOR
44: shift/reduce conflict (shift 11(0), red'n 7(0)) on FUNCTION
44: shift/reduce conflict (shift 10(0), red'n 7(0)) on IF
44: shift/reduce conflict (shift 14(0), red'n 7(0)) on LOCAL
44: shift/reduce conflict (shift 9(0), red'n 7(0)) on REPEAT
44: shift/reduce conflict (shift 7(0), red'n 7(0)) on WHILE
44: shift/reduce conflict (shift 15(0), red'n 7(0)) on CLOSURE
44: shift/reduce conflict (shift 19(0), red'n 7(0)) on NAME
state 44
	Stat:  Repetition DO.Block END 
	StatList: .    (7)

	DO  shift 6
	FOR  shift 16
	FUNCTION  shift 11
	IF  shift 10
	LOCAL  shift 14
	REPEAT  shift 9
	WHILE  shift 7
	CLOSURE  shift 15
	NAME  shift 19
	.  reduce 7 (src line 63)

	Block  goto 101
	StatList  goto 3
	Stat  goto 4
	Binding  goto 5
	Repetition  goto 8
	SetList  goto 12
	FuncCall  goto 13
	Var  goto 17
	PrefixExp  goto 18

state 45
	Stat:  REPEAT UBlock.    (12)

	.  reduce 12 (src line 70)


state 46
	UBlock:  Block.UNTIL Exp 

	UNTIL  shift 102
	.  error


state 47
	Stat:  IF Conds.END 

	END  shift 103
	.  error


state 48
	Conds:  CondList.    (19)
	Conds:  CondList.ELSE Block 
	CondList:  CondList.ELSEIF Cond 

	ELSEIF  shift 105
	ELSE  shift 104
	.  reduce 19 (src line 83)


state 49
	CondList:  Cond.    (21)

	.  reduce 21 (src line 87)


state 50
	Cond:  Exp.THEN Block 
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 

	AND  shift 73
	OR  shift 72
	THEN  shift 106
	SLTEQ  shift 84
	SGTEQ  shift 85
	SEQ  shift 86
	SNOTEQ  shift 87
	STRADD  shift 75
	<  shift 82
	>  shift 83
	+  shift 77
	-  shift 76
	*  shift 78
	/  shift 79
	%  shift 81
	^  shift 80
	.  error

	LogicOp  goto 74

state 51
	Stat:  FUNCTION FuncName.FuncBody 

	(  shift 93
	.  error

	FuncBody  goto 107
	ParamDefList  goto 92

state 52
	FuncName:  DottedName.    (34)
	FuncName:  DottedName.: NAME 
	DottedName:  DottedName.. NAME 

	:  shift 108
	.  shift 109
	.  reduce 34 (src line 115)


state 53
	DottedName:  NAME.    (36)

	.  reduce 36 (src line 122)


state 54
	Stat:  SetList =.ExpList 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 69
	ExpList  goto 110
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 55
	SetList:  SetList ,.Var 

	NAME  shift 19
	.  error

	FuncCall  goto 41
	Var  goto 111
	PrefixExp  goto 18

state 56
	Binding:  LOCAL NameList.    (27)
	Binding:  LOCAL NameList.= ExpList 
	NameList:  NameList., NAME 

	=  shift 112
	,  shift 113
	.  reduce 27 (src line 99)


state 57
	Binding:  LOCAL FUNCTION.NAME FuncBody 

	NAME  shift 114
	.  error


state 58
	NameList:  NAME.    (85)

	.  reduce 85 (src line 207)


state 59
	Binding:  CLOSURE (.NameList ) 

	NAME  shift 58
	.  error

	NameList  goto 115

state 60
	Binding:  CLOSURE NameList.    (31)
	NameList:  NameList., NAME 

	,  shift 113
	.  reduce 31 (src line 109)


state 61
	Repetition:  FOR NAME.= ExpList 
	Name2:  NAME.    (83)
	Name2:  NAME., NAME 

	=  shift 116
	,  shift 117
	.  reduce 83 (src line 203)


state 62
	Repetition:  FOR Name2.IN ExpList 

	IN  shift 118
	.  error


state 63
	Var:  PrefixExp [.Exp ] 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 119
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 64
	Var:  PrefixExp ..NAME 

	NAME  shift 120
	.  error


state 65
	FuncCall:  PrefixExp Args.    (72)

	.  reduce 72 (src line 174)


state 66
	FuncCall:  PrefixExp :.NAME Args 

	NAME  shift 121
	.  error


state 67
	Args:  (.) 
	Args:  (.ExpList ) 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	)  shift 122
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 69
	ExpList  goto 123
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 68
	LastStat:  RETURN ExpList.    (26)
	ExpList:  ExpList., Exp 

	,  shift 124
	.  reduce 26 (src line 97)


state 69
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 
	ExpList:  Exp.    (90)

	AND  shift 73
	OR  shift 72
	SLTEQ  shift 84
	SGTEQ  shift 85
	SEQ  shift 86
	SNOTEQ  shift 87
	STRADD  shift 75
	<  shift 82
	>  shift 83
	+  shift 77
	-  shift 76
	*  shift 78
	/  shift 79
	%  shift 81
	^  shift 80
	.  reduce 90 (src line 216)

	LogicOp  goto 74

state 70
	Stat:  DO Block END.    (9)

	.  reduce 9 (src line 67)


71: shift/reduce conflict (shift 6(0), red'n 7(0)) on DO
71: shift/reduce conflict (shift 16(0), red'n 7(0)) on FOR
71: shift/reduce conflict (shift 11(0), red'n 7(0)) on FUNCTION
71: shift/reduce conflict (shift 10(0), red'n 7(0)) on IF
71: shift/reduce conflict (shift 14(0), red'n 7(0)) on LOCAL
71: shift/reduce conflict (shift 9(0), red'n 7(0)) on REPEAT
71: shift/reduce conflict (shift 7(0), red'n 7(0)) on WHILE
71: shift/reduce conflict (shift 15(0), red'n 7(0)) on CLOSURE
71: shift/reduce conflict (shift 19(0), red'n 7(0)) on NAME
state 71
	Stat:  WHILE Exp DO.Block END 
	StatList: .    (7)

	DO  shift 6
	FOR  shift 16
	FUNCTION  shift 11
	IF  shift 10
	LOCAL  shift 14
	REPEAT  shift 9
	WHILE  shift 7
	CLOSURE  shift 15
	NAME  shift 19
	.  reduce 7 (src line 63)

	Block  goto 125
	StatList  goto 3
	Stat  goto 4
	Binding  goto 5
	Repetition  goto 8
	SetList  goto 12
	FuncCall  goto 13
	Var  goto 17
	PrefixExp  goto 18

state 72
	Exp:  Exp OR.Exp 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 126
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 73
	Exp:  Exp AND.Exp 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 127
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 74
	Exp:  Exp LogicOp.Exp 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 128
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 75
	Exp:  Exp STRADD.Exp 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 129
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 76
	Exp:  Exp -.Exp 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 130
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 77
	Exp:  Exp +.Exp 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 131
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 78
	Exp:  Exp *.Exp 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 132
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 79
	Exp:  Exp /.Exp 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 133
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 80
	Exp:  Exp ^.Exp 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 134
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 81
	Exp:  Exp %.Exp 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 135
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 82
	LogicOp:  <.    (61)

	.  reduce 61 (src line 154)


state 83
	LogicOp:  >.    (62)

	.  reduce 62 (src line 156)


state 84
	LogicOp:  SLTEQ.    (63)

	.  reduce 63 (src line 157)


state 85
	LogicOp:  SGTEQ.    (64)

	.  reduce 64 (src line 158)


state 86
	LogicOp:  SEQ.    (65)

	.  reduce 65 (src line 159)


state 87
	LogicOp:  SNOTEQ.    (66)

	.  reduce 66 (src line 160)


state 88
	Exp:  NOT Exp.    (48)
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 

	^  shift 80
	.  reduce 48 (src line 140)

	LogicOp  goto 74

89: shift/reduce conflict (shift 73(2), red'n 49(0)) on AND
89: shift/reduce conflict (shift 72(1), red'n 49(0)) on OR
89: shift/reduce conflict (shift 84(3), red'n 49(0)) on SLTEQ
89: shift/reduce conflict (shift 85(3), red'n 49(0)) on SGTEQ
89: shift/reduce conflict (shift 86(3), red'n 49(0)) on SEQ
89: shift/reduce conflict (shift 87(3), red'n 49(0)) on SNOTEQ
89: shift/reduce conflict (shift 75(4), red'n 49(0)) on STRADD
89: shift/reduce conflict (shift 82(3), red'n 49(0)) on <
89: shift/reduce conflict (shift 83(3), red'n 49(0)) on >
89: shift/reduce conflict (shift 77(5), red'n 49(0)) on +
89: shift/reduce conflict (shift 76(5), red'n 49(0)) on -
89: shift/reduce conflict (shift 78(6), red'n 49(0)) on *
89: shift/reduce conflict (shift 79(6), red'n 49(0)) on /
89: shift/reduce conflict (shift 81(6), red'n 49(0)) on %
89: shift/reduce conflict (shift 80(8), red'n 49(0)) on ^
state 89
	Exp:  # Exp.    (49)
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 

	AND  shift 73
	OR  shift 72
	SLTEQ  shift 84
	SGTEQ  shift 85
	SEQ  shift 86
	SNOTEQ  shift 87
	STRADD  shift 75
	<  shift 82
	>  shift 83
	+  shift 77
	-  shift 76
	*  shift 78
	/  shift 79
	%  shift 81
	^  shift 80
	.  reduce 49 (src line 141)

	LogicOp  goto 74

state 90
	Exp:  - Exp.    (50)
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 

	^  shift 80
	.  reduce 50 (src line 142)

	LogicOp  goto 74

state 91
	FuncDef:  FUNCTION FuncBody.    (76)

	.  reduce 76 (src line 187)


92: shift/reduce conflict (shift 6(0), red'n 7(0)) on DO
92: shift/reduce conflict (shift 16(0), red'n 7(0)) on FOR
92: shift/reduce conflict (shift 11(0), red'n 7(0)) on FUNCTION
92: shift/reduce conflict (shift 10(0), red'n 7(0)) on IF
92: shift/reduce conflict (shift 14(0), red'n 7(0)) on LOCAL
92: shift/reduce conflict (shift 9(0), red'n 7(0)) on REPEAT
92: shift/reduce conflict (shift 7(0), red'n 7(0)) on WHILE
92: shift/reduce conflict (shift 15(0), red'n 7(0)) on CLOSURE
92: shift/reduce conflict (shift 19(0), red'n 7(0)) on NAME
state 92
	FuncBody:  ParamDefList.Block END 
	StatList: .    (7)

	DO  shift 6
	FOR  shift 16
	FUNCTION  shift 11
	IF  shift 10
	LOCAL  shift 14
	REPEAT  shift 9
	WHILE  shift 7
	CLOSURE  shift 15
	NAME  shift 19
	.  reduce 7 (src line 63)

	Block  goto 136
	StatList  goto 3
	Stat  goto 4
	Binding  goto 5
	Repetition  goto 8
	SetList  goto 12
	FuncCall  goto 13
	Var  goto 17
	PrefixExp  goto 18

state 93
	ParamDefList:  (.ParDefList ) 
	ParDefList: .    (82)

	NAME  shift 58
	MORE  shift 139
	.  reduce 82 (src line 200)

	NameList  goto 138
	ParDefList  goto 137

state 94
	Tableconstructor:  { }.    (92)

	.  reduce 92 (src line 220)


state 95
	Tableconstructor:  { FieldList.} 
	Tableconstructor:  { FieldList., } 
	FieldList:  FieldList., Field 

	,  shift 141
	}  shift 140
	.  error


state 96
	FieldList:  Field.    (95)

	.  reduce 95 (src line 225)


state 97
	Field:  NAME.= Exp 

	=  shift 142
	.  error


state 98
	Field:  [.Exp ] = Exp 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 143
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 99
	Arrayconstructor:  [ ].    (87)

	.  reduce 87 (src line 211)


state 100
	Arrayconstructor:  [ ExpList.] 
	Arrayconstructor:  [ ExpList., ] 
	ExpList:  ExpList., Exp 

	,  shift 145
	]  shift 144
	.  error


state 101
	Stat:  Repetition DO Block.END 

	END  shift 146
	.  error


state 102
	UBlock:  Block UNTIL.Exp 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 147
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 103
	Stat:  IF Conds END.    (13)

	.  reduce 13 (src line 71)


104: shift/reduce conflict (shift 6(0), red'n 7(0)) on DO
104: shift/reduce conflict (shift 16(0), red'n 7(0)) on FOR
104: shift/reduce conflict (shift 11(0), red'n 7(0)) on FUNCTION
104: shift/reduce conflict (shift 10(0), red'n 7(0)) on IF
104: shift/reduce conflict (shift 14(0), red'n 7(0)) on LOCAL
104: shift/reduce conflict (shift 9(0), red'n 7(0)) on REPEAT
104: shift/reduce conflict (shift 7(0), red'n 7(0)) on WHILE
104: shift/reduce conflict (shift 15(0), red'n 7(0)) on CLOSURE
104: shift/reduce conflict (shift 19(0), red'n 7(0)) on NAME
state 104
	Conds:  CondList ELSE.Block 
	StatList: .    (7)

	DO  shift 6
	FOR  shift 16
	FUNCTION  shift 11
	IF  shift 10
	LOCAL  shift 14
	REPEAT  shift 9
	WHILE  shift 7
	CLOSURE  shift 15
	NAME  shift 19
	.  reduce 7 (src line 63)

	Block  goto 148
	StatList  goto 3
	Stat  goto 4
	Binding  goto 5
	Repetition  goto 8
	SetList  goto 12
	FuncCall  goto 13
	Var  goto 17
	PrefixExp  goto 18

state 105
	CondList:  CondList ELSEIF.Cond 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 50
	FuncCall  goto 41
	Cond  goto 149
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

106: shift/reduce conflict (shift 6(0), red'n 7(0)) on DO
106: shift/reduce conflict (shift 16(0), red'n 7(0)) on FOR
106: shift/reduce conflict (shift 11(0), red'n 7(0)) on FUNCTION
106: shift/reduce conflict (shift 10(0), red'n 7(0)) on IF
106: shift/reduce conflict (shift 14(0), red'n 7(0)) on LOCAL
106: shift/reduce conflict (shift 9(0), red'n 7(0)) on REPEAT
106: shift/reduce conflict (shift 7(0), red'n 7(0)) on WHILE
106: shift/reduce conflict (shift 15(0), red'n 7(0)) on CLOSURE
106: shift/reduce conflict (shift 19(0), red'n 7(0)) on NAME
state 106
	Cond:  Exp THEN.Block 
	StatList: .    (7)

	DO  shift 6
	FOR  shift 16
	FUNCTION  shift 11
	IF  shift 10
	LOCAL  shift 14
	REPEAT  shift 9
	WHILE  shift 7
	CLOSURE  shift 15
	NAME  shift 19
	.  reduce 7 (src line 63)

	Block  goto 150
	StatList  goto 3
	Stat  goto 4
	Binding  goto 5
	Repetition  goto 8
	SetList  goto 12
	FuncCall  goto 13
	Var  goto 17
	PrefixExp  goto 18

state 107
	Stat:  FUNCTION FuncName FuncBody.    (14)

	.  reduce 14 (src line 72)


state 108
	FuncName:  DottedName :.NAME 

	NAME  shift 151
	.  error


state 109
	DottedName:  DottedName ..NAME 

	NAME  shift 152
	.  error


state 110
	Stat:  SetList = ExpList.    (15)
	ExpList:  ExpList., Exp 

	,  shift 124
	.  reduce 15 (src line 76)


state 111
	SetList:  SetList , Var.    (33)
	PrefixExp:  Var.    (70)

	=  reduce 33 (src line 113)
	,  reduce 33 (src line 113)
	.  reduce 70 (src line 170)


state 112
	Binding:  LOCAL NameList =.ExpList 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 69
	ExpList  goto 153
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 113
	NameList:  NameList ,.NAME 

	NAME  shift 154
	.  error


state 114
	Binding:  LOCAL FUNCTION NAME.FuncBody 

	(  shift 93
	.  error

	FuncBody  goto 155
	ParamDefList  goto 92

state 115
	Binding:  CLOSURE ( NameList.) 
	NameList:  NameList., NAME 

	)  shift 156
	,  shift 113
	.  error


state 116
	Repetition:  FOR NAME =.ExpList 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 69
	ExpList  goto 157
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 117
	Name2:  NAME ,.NAME 

	NAME  shift 158
	.  error


state 118
	Repetition:  FOR Name2 IN.ExpList 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 69
	ExpList  goto 159
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 119
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 
	Var:  PrefixExp [ Exp.] 

	AND  shift 73
	OR  shift 72
	SLTEQ  shift 84
	SGTEQ  shift 85
	SEQ  shift 86
	SNOTEQ  shift 87
	STRADD  shift 75
	<  shift 82
	>  shift 83
	+  shift 77
	-  shift 76
	*  shift 78
	/  shift 79
	%  shift 81
	^  shift 80
	]  shift 160
	.  error

	LogicOp  goto 74

state 120
	Var:  PrefixExp . NAME.    (69)

	.  reduce 69 (src line 165)


state 121
	FuncCall:  PrefixExp : NAME.Args 

	(  shift 67
	.  error

	Args  goto 161

state 122
	Args:  ( ).    (74)

	.  reduce 74 (src line 183)


state 123
	Args:  ( ExpList.) 
	ExpList:  ExpList., Exp 

	)  shift 162
	,  shift 124
	.  error


state 124
	ExpList:  ExpList ,.Exp 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 163
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 125
	Stat:  WHILE Exp DO Block.END 

	END  shift 164
	.  error


state 126
	Exp:  Exp.OR Exp 
	Exp:  Exp OR Exp.    (51)
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 

	AND  shift 73
	SLTEQ  shift 84
	SGTEQ  shift 85
	SEQ  shift 86
	SNOTEQ  shift 87
	STRADD  shift 75
	<  shift 82
	>  shift 83
	+  shift 77
	-  shift 76
	*  shift 78
	/  shift 79
	%  shift 81
	^  shift 80
	.  reduce 51 (src line 143)

	LogicOp  goto 74

state 127
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp AND Exp.    (52)
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 

	SLTEQ  shift 84
	SGTEQ  shift 85
	SEQ  shift 86
	SNOTEQ  shift 87
	STRADD  shift 75
	<  shift 82
	>  shift 83
	+  shift 77
	-  shift 76
	*  shift 78
	/  shift 79
	%  shift 81
	^  shift 80
	.  reduce 52 (src line 144)

	LogicOp  goto 74

128: shift/reduce conflict (shift 73(2), red'n 53(0)) on AND
128: shift/reduce conflict (shift 72(1), red'n 53(0)) on OR
128: shift/reduce conflict (shift 84(3), red'n 53(0)) on SLTEQ
128: shift/reduce conflict (shift 85(3), red'n 53(0)) on SGTEQ
128: shift/reduce conflict (shift 86(3), red'n 53(0)) on SEQ
128: shift/reduce conflict (shift 87(3), red'n 53(0)) on SNOTEQ
128: shift/reduce conflict (shift 75(4), red'n 53(0)) on STRADD
128: shift/reduce conflict (shift 82(3), red'n 53(0)) on <
128: shift/reduce conflict (shift 83(3), red'n 53(0)) on >
128: shift/reduce conflict (shift 77(5), red'n 53(0)) on +
128: shift/reduce conflict (shift 76(5), red'n 53(0)) on -
128: shift/reduce conflict (shift 78(6), red'n 53(0)) on *
128: shift/reduce conflict (shift 79(6), red'n 53(0)) on /
128: shift/reduce conflict (shift 81(6), red'n 53(0)) on %
128: shift/reduce conflict (shift 80(8), red'n 53(0)) on ^
state 128
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp LogicOp Exp.    (53)
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 

	AND  shift 73
	OR  shift 72
	SLTEQ  shift 84
	SGTEQ  shift 85
	SEQ  shift 86
	SNOTEQ  shift 87
	STRADD  shift 75
	<  shift 82
	>  shift 83
	+  shift 77
	-  shift 76
	*  shift 78
	/  shift 79
	%  shift 81
	^  shift 80
	.  reduce 53 (src line 145)

	LogicOp  goto 74

state 129
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp STRADD Exp.    (54)
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 

	STRADD  shift 75
	+  shift 77
	-  shift 76
	*  shift 78
	/  shift 79
	%  shift 81
	^  shift 80
	.  reduce 54 (src line 146)

	LogicOp  goto 74

state 130
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp - Exp.    (55)
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 

	*  shift 78
	/  shift 79
	%  shift 81
	^  shift 80
	.  reduce 55 (src line 147)

	LogicOp  goto 74

state 131
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp + Exp.    (56)
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 

	*  shift 78
	/  shift 79
	%  shift 81
	^  shift 80
	.  reduce 56 (src line 148)

	LogicOp  goto 74

state 132
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp * Exp.    (57)
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 

	^  shift 80
	.  reduce 57 (src line 149)

	LogicOp  goto 74

state 133
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp / Exp.    (58)
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 

	^  shift 80
	.  reduce 58 (src line 150)

	LogicOp  goto 74

state 134
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp ^ Exp.    (59)
	Exp:  Exp.% Exp 

	^  shift 80
	.  reduce 59 (src line 151)

	LogicOp  goto 74

state 135
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 
	Exp:  Exp % Exp.    (60)

	^  shift 80
	.  reduce 60 (src line 152)

	LogicOp  goto 74

state 136
	FuncBody:  ParamDefList Block.END 

	END  shift 165
	.  error


state 137
	ParamDefList:  ( ParDefList.) 

	)  shift 166
	.  error


state 138
	ParDefList:  NameList.    (79)
	ParDefList:  NameList., MORE 
	NameList:  NameList., NAME 

	,  shift 167
	.  reduce 79 (src line 196)


state 139
	ParDefList:  MORE.    (80)

	.  reduce 80 (src line 198)


state 140
	Tableconstructor:  { FieldList }.    (93)

	.  reduce 93 (src line 222)


state 141
	Tableconstructor:  { FieldList ,.} 
	FieldList:  FieldList ,.Field 

	NAME  shift 97
	[  shift 98
	}  shift 168
	.  error

	Field  goto 169

state 142
	Field:  NAME =.Exp 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 170
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 143
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 
	Field:  [ Exp.] = Exp 

	AND  shift 73
	OR  shift 72
	SLTEQ  shift 84
	SGTEQ  shift 85
	SEQ  shift 86
	SNOTEQ  shift 87
	STRADD  shift 75
	<  shift 82
	>  shift 83
	+  shift 77
	-  shift 76
	*  shift 78
	/  shift 79
	%  shift 81
	^  shift 80
	]  shift 171
	.  error

	LogicOp  goto 74

state 144
	Arrayconstructor:  [ ExpList ].    (88)

	.  reduce 88 (src line 213)


state 145
	Arrayconstructor:  [ ExpList ,.] 
	ExpList:  ExpList ,.Exp 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	]  shift 172
	{  shift 42
	.  error

	Exp  goto 163
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 146
	Stat:  Repetition DO Block END.    (11)

	.  reduce 11 (src line 69)


state 147
	UBlock:  Block UNTIL Exp.    (4)
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 

	AND  shift 73
	OR  shift 72
	SLTEQ  shift 84
	SGTEQ  shift 85
	SEQ  shift 86
	SNOTEQ  shift 87
	STRADD  shift 75
	<  shift 82
	>  shift 83
	+  shift 77
	-  shift 76
	*  shift 78
	/  shift 79
	%  shift 81
	^  shift 80
	.  reduce 4 (src line 57)

	LogicOp  goto 74

state 148
	Conds:  CondList ELSE Block.    (20)

	.  reduce 20 (src line 85)


state 149
	CondList:  CondList ELSEIF Cond.    (22)

	.  reduce 22 (src line 89)


state 150
	Cond:  Exp THEN Block.    (23)

	.  reduce 23 (src line 91)


state 151
	FuncName:  DottedName : NAME.    (35)

	.  reduce 35 (src line 117)


state 152
	DottedName:  DottedName . NAME.    (37)

	.  reduce 37 (src line 124)


state 153
	Binding:  LOCAL NameList = ExpList.    (28)
	ExpList:  ExpList., Exp 

	,  shift 124
	.  reduce 28 (src line 101)


state 154
	NameList:  NameList , NAME.    (86)

	.  reduce 86 (src line 209)


state 155
	Binding:  LOCAL FUNCTION NAME FuncBody.    (29)

	.  reduce 29 (src line 102)


state 156
	Binding:  CLOSURE ( NameList ).    (30)

	.  reduce 30 (src line 108)


state 157
	Repetition:  FOR NAME = ExpList.    (17)
	ExpList:  ExpList., Exp 

	,  shift 124
	.  reduce 17 (src line 79)


state 158
	Name2:  NAME , NAME.    (84)

	.  reduce 84 (src line 205)


state 159
	Repetition:  FOR Name2 IN ExpList.    (18)
	ExpList:  ExpList., Exp 

	,  shift 124
	.  reduce 18 (src line 81)


state 160
	Var:  PrefixExp [ Exp ].    (68)

	.  reduce 68 (src line 164)


state 161
	FuncCall:  PrefixExp : NAME Args.    (73)

	.  reduce 73 (src line 176)


state 162
	Args:  ( ExpList ).    (75)

	.  reduce 75 (src line 185)


state 163
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 
	ExpList:  ExpList , Exp.    (91)

	AND  shift 73
	OR  shift 72
	SLTEQ  shift 84
	SGTEQ  shift 85
	SEQ  shift 86
	SNOTEQ  shift 87
	STRADD  shift 75
	<  shift 82
	>  shift 83
	+  shift 77
	-  shift 76
	*  shift 78
	/  shift 79
	%  shift 81
	^  shift 80
	.  reduce 91 (src line 218)

	LogicOp  goto 74

state 164
	Stat:  WHILE Exp DO Block END.    (10)

	.  reduce 10 (src line 68)


state 165
	FuncBody:  ParamDefList Block END.    (77)

	.  reduce 77 (src line 190)


state 166
	ParamDefList:  ( ParDefList ).    (78)

	.  reduce 78 (src line 193)


state 167
	ParDefList:  NameList ,.MORE 
	NameList:  NameList ,.NAME 

	NAME  shift 154
	MORE  shift 173
	.  error


state 168
	Tableconstructor:  { FieldList , }.    (94)

	.  reduce 94 (src line 223)


state 169
	FieldList:  FieldList , Field.    (96)

	.  reduce 96 (src line 227)


state 170
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 
	Field:  NAME = Exp.    (97)

	AND  shift 73
	OR  shift 72
	SLTEQ  shift 84
	SGTEQ  shift 85
	SEQ  shift 86
	SNOTEQ  shift 87
	STRADD  shift 75
	<  shift 82
	>  shift 83
	+  shift 77
	-  shift 76
	*  shift 78
	/  shift 79
	%  shift 81
	^  shift 80
	.  reduce 97 (src line 229)

	LogicOp  goto 74

state 171
	Field:  [ Exp ].= Exp 

	=  shift 174
	.  error


state 172
	Arrayconstructor:  [ ExpList , ].    (89)

	.  reduce 89 (src line 214)


state 173
	ParDefList:  NameList , MORE.    (81)

	.  reduce 81 (src line 199)


state 174
	Field:  [ Exp ] =.Exp 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 175
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 175
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 
	Field:  [ Exp ] = Exp.    (98)

	AND  shift 73
	OR  shift 72
	SLTEQ  shift 84
	SGTEQ  shift 85
	SEQ  shift 86
	SNOTEQ  shift 87
	STRADD  shift 75
	<  shift 82
	>  shift 83
	+  shift 77
	-  shift 76
	*  shift 78
	/  shift 79
	%  shift 81
	^  shift 80
	.  reduce 98 (src line 234)

	LogicOp  goto 74

55 terminals, 32 nonterminals
99 grammar rules, 176/2000 states
102 shift/reduce, 0 reduce/reduce conflicts reported
81 working sets used
memory: parser 441/30000
124 extra closures
766 shift entries, 9 exceptions
105 goto entries
243 entries saved by goto default
Optimizer space used: output 469/30000
469 table entries, 108 zero
maximum spread: 55, maximum offset: 174
