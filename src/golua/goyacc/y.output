
0: shift/reduce conflict (shift 6(0), red'n 7(0)) on DO
0: shift/reduce conflict (shift 16(0), red'n 7(0)) on FOR
0: shift/reduce conflict (shift 11(0), red'n 7(0)) on FUNCTION
0: shift/reduce conflict (shift 10(0), red'n 7(0)) on IF
0: shift/reduce conflict (shift 14(0), red'n 7(0)) on LOCAL
0: shift/reduce conflict (shift 9(0), red'n 7(0)) on REPEAT
0: shift/reduce conflict (shift 7(0), red'n 7(0)) on WHILE
0: shift/reduce conflict (shift 15(0), red'n 7(0)) on CLOSURE
0: shift/reduce conflict (shift 19(0), red'n 7(0)) on NAME
state 0
	$accept: .Chunk $end 
	StatList: .    (7)

	DO  shift 6
	FOR  shift 16
	FUNCTION  shift 11
	IF  shift 10
	LOCAL  shift 14
	REPEAT  shift 9
	WHILE  shift 7
	CLOSURE  shift 15
	NAME  shift 19
	.  reduce 7 (src line 63)

	Chunk  goto 1
	Block  goto 2
	StatList  goto 3
	Stat  goto 4
	Binding  goto 5
	Repetition  goto 8
	SetList  goto 12
	FuncCall  goto 13
	Var  goto 17
	PrefixExp  goto 18

state 1
	$accept:  Chunk.$end 

	$end  accept
	.  error


state 2
	Chunk:  Block.    (1)

	.  reduce 1 (src line 50)


state 3
	Block:  StatList.    (2)
	Block:  StatList.LastStat 
	StatList:  StatList.Stat 

	BREAK  shift 22
	DO  shift 6
	FOR  shift 16
	FUNCTION  shift 11
	IF  shift 10
	LOCAL  shift 14
	RETURN  shift 23
	REPEAT  shift 9
	WHILE  shift 7
	CLOSURE  shift 15
	NAME  shift 19
	.  reduce 2 (src line 53)

	LastStat  goto 20
	Stat  goto 21
	Binding  goto 5
	Repetition  goto 8
	SetList  goto 12
	FuncCall  goto 13
	Var  goto 17
	PrefixExp  goto 18

state 4
	StatList:  Stat.    (5)

	.  reduce 5 (src line 60)


state 5
	Stat:  Binding.    (8)

	.  reduce 8 (src line 65)


6: shift/reduce conflict (shift 6(0), red'n 7(0)) on DO
6: shift/reduce conflict (shift 16(0), red'n 7(0)) on FOR
6: shift/reduce conflict (shift 11(0), red'n 7(0)) on FUNCTION
6: shift/reduce conflict (shift 10(0), red'n 7(0)) on IF
6: shift/reduce conflict (shift 14(0), red'n 7(0)) on LOCAL
6: shift/reduce conflict (shift 9(0), red'n 7(0)) on REPEAT
6: shift/reduce conflict (shift 7(0), red'n 7(0)) on WHILE
6: shift/reduce conflict (shift 15(0), red'n 7(0)) on CLOSURE
6: shift/reduce conflict (shift 19(0), red'n 7(0)) on NAME
state 6
	Stat:  DO.Block END 
	StatList: .    (7)

	DO  shift 6
	FOR  shift 16
	FUNCTION  shift 11
	IF  shift 10
	LOCAL  shift 14
	REPEAT  shift 9
	WHILE  shift 7
	CLOSURE  shift 15
	NAME  shift 19
	.  reduce 7 (src line 63)

	Block  goto 24
	StatList  goto 3
	Stat  goto 4
	Binding  goto 5
	Repetition  goto 8
	SetList  goto 12
	FuncCall  goto 13
	Var  goto 17
	PrefixExp  goto 18

state 7
	Stat:  WHILE.Exp DO Block END 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 25
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 8
	Stat:  Repetition.DO Block END 

	DO  shift 44
	.  error


9: shift/reduce conflict (shift 6(0), red'n 7(0)) on DO
9: shift/reduce conflict (shift 16(0), red'n 7(0)) on FOR
9: shift/reduce conflict (shift 11(0), red'n 7(0)) on FUNCTION
9: shift/reduce conflict (shift 10(0), red'n 7(0)) on IF
9: shift/reduce conflict (shift 14(0), red'n 7(0)) on LOCAL
9: shift/reduce conflict (shift 9(0), red'n 7(0)) on REPEAT
9: shift/reduce conflict (shift 7(0), red'n 7(0)) on WHILE
9: shift/reduce conflict (shift 15(0), red'n 7(0)) on CLOSURE
9: shift/reduce conflict (shift 19(0), red'n 7(0)) on NAME
state 9
	Stat:  REPEAT.UBlock 
	StatList: .    (7)

	DO  shift 6
	FOR  shift 16
	FUNCTION  shift 11
	IF  shift 10
	LOCAL  shift 14
	REPEAT  shift 9
	WHILE  shift 7
	CLOSURE  shift 15
	NAME  shift 19
	.  reduce 7 (src line 63)

	Block  goto 46
	StatList  goto 3
	UBlock  goto 45
	Stat  goto 4
	Binding  goto 5
	Repetition  goto 8
	SetList  goto 12
	FuncCall  goto 13
	Var  goto 17
	PrefixExp  goto 18

state 10
	Stat:  IF.Conds END 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 50
	Conds  goto 47
	FuncCall  goto 41
	CondList  goto 48
	Cond  goto 49
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 11
	Stat:  FUNCTION.FuncName FuncBody 

	NAME  shift 53
	.  error

	FuncName  goto 51
	DottedName  goto 52

state 12
	Stat:  SetList.= ExpList 
	SetList:  SetList., Var 

	=  shift 54
	,  shift 55
	.  error


state 13
	Stat:  FuncCall.    (16)
	PrefixExp:  FuncCall.    (70)

	(  reduce 70 (src line 171)
	:  reduce 70 (src line 171)
	.  reduce 70 (src line 171)
	[  reduce 70 (src line 171)
	.  reduce 16 (src line 77)


state 14
	Binding:  LOCAL.NameList 
	Binding:  LOCAL.NameList = ExpList 
	Binding:  LOCAL.FUNCTION NAME FuncBody 

	FUNCTION  shift 57
	NAME  shift 58
	.  error

	NameList  goto 56

state 15
	Binding:  CLOSURE.( NameList ) 

	(  shift 59
	.  error


state 16
	Repetition:  FOR.NAME = ExpList 
	Repetition:  FOR.NameList IN ExpList 

	NAME  shift 60
	.  error

	NameList  goto 61

state 17
	SetList:  Var.    (31)
	PrefixExp:  Var.    (69)

	=  reduce 31 (src line 110)
	,  reduce 31 (src line 110)
	.  reduce 69 (src line 169)


state 18
	Var:  PrefixExp.[ Exp ] 
	Var:  PrefixExp.. NAME 
	FuncCall:  PrefixExp.Args 
	FuncCall:  PrefixExp.: NAME Args 

	(  shift 66
	:  shift 65
	.  shift 63
	[  shift 62
	.  error

	Args  goto 64

state 19
	Var:  NAME.    (66)

	.  reduce 66 (src line 161)


state 20
	Block:  StatList LastStat.    (3)

	.  reduce 3 (src line 55)


state 21
	StatList:  StatList Stat.    (6)

	.  reduce 6 (src line 62)


state 22
	LastStat:  BREAK.    (24)

	.  reduce 24 (src line 94)


state 23
	LastStat:  RETURN.    (25)
	LastStat:  RETURN.ExpList 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  reduce 25 (src line 96)

	Exp  goto 68
	ExpList  goto 67
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 24
	Stat:  DO Block.END 

	END  shift 69
	.  error


state 25
	Stat:  WHILE Exp.DO Block END 
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 

	AND  shift 72
	DO  shift 70
	OR  shift 71
	SLTEQ  shift 83
	SGTEQ  shift 84
	SEQ  shift 85
	SNOTEQ  shift 86
	STRADD  shift 74
	<  shift 81
	>  shift 82
	+  shift 76
	-  shift 75
	*  shift 77
	/  shift 78
	%  shift 80
	^  shift 79
	.  error

	LogicOp  goto 73

state 26
	Exp:  NIL.    (37)

	.  reduce 37 (src line 128)


state 27
	Exp:  TRUE.    (38)

	.  reduce 38 (src line 130)


state 28
	Exp:  FALSE.    (39)

	.  reduce 39 (src line 131)


state 29
	Exp:  NUMBER.    (40)

	.  reduce 40 (src line 132)


state 30
	Exp:  STRING.    (41)

	.  reduce 41 (src line 133)


state 31
	Exp:  MORE.    (42)

	.  reduce 42 (src line 134)


state 32
	Exp:  FuncDef.    (43)

	.  reduce 43 (src line 135)


state 33
	Exp:  PrefixExp.    (44)
	Var:  PrefixExp.[ Exp ] 
	Var:  PrefixExp.. NAME 
	FuncCall:  PrefixExp.Args 
	FuncCall:  PrefixExp.: NAME Args 

	(  shift 66
	:  shift 65
	.  shift 63
	[  shift 62
	.  reduce 44 (src line 136)

	Args  goto 64

state 34
	Exp:  Tableconstructor.    (45)

	.  reduce 45 (src line 137)


state 35
	Exp:  Arrayconstructor.    (46)

	.  reduce 46 (src line 138)


state 36
	Exp:  NOT.Exp 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 87
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 37
	Exp:  #.Exp 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 88
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 38
	Exp:  -.Exp 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 89
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 39
	FuncDef:  FUNCTION.FuncBody 

	(  shift 92
	.  error

	FuncBody  goto 90
	ParamDefList  goto 91

state 40
	PrefixExp:  Var.    (69)

	.  reduce 69 (src line 169)


state 41
	PrefixExp:  FuncCall.    (70)

	.  reduce 70 (src line 171)


state 42
	Tableconstructor:  {.} 
	Tableconstructor:  {.FieldList } 
	Tableconstructor:  {.FieldList , } 

	NAME  shift 96
	[  shift 97
	}  shift 93
	.  error

	FieldList  goto 94
	Field  goto 95

state 43
	Arrayconstructor:  [.] 
	Arrayconstructor:  [.ExpList ] 
	Arrayconstructor:  [.ExpList , ] 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	]  shift 98
	{  shift 42
	.  error

	Exp  goto 68
	ExpList  goto 99
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

44: shift/reduce conflict (shift 6(0), red'n 7(0)) on DO
44: shift/reduce conflict (shift 16(0), red'n 7(0)) on FOR
44: shift/reduce conflict (shift 11(0), red'n 7(0)) on FUNCTION
44: shift/reduce conflict (shift 10(0), red'n 7(0)) on IF
44: shift/reduce conflict (shift 14(0), red'n 7(0)) on LOCAL
44: shift/reduce conflict (shift 9(0), red'n 7(0)) on REPEAT
44: shift/reduce conflict (shift 7(0), red'n 7(0)) on WHILE
44: shift/reduce conflict (shift 15(0), red'n 7(0)) on CLOSURE
44: shift/reduce conflict (shift 19(0), red'n 7(0)) on NAME
state 44
	Stat:  Repetition DO.Block END 
	StatList: .    (7)

	DO  shift 6
	FOR  shift 16
	FUNCTION  shift 11
	IF  shift 10
	LOCAL  shift 14
	REPEAT  shift 9
	WHILE  shift 7
	CLOSURE  shift 15
	NAME  shift 19
	.  reduce 7 (src line 63)

	Block  goto 100
	StatList  goto 3
	Stat  goto 4
	Binding  goto 5
	Repetition  goto 8
	SetList  goto 12
	FuncCall  goto 13
	Var  goto 17
	PrefixExp  goto 18

state 45
	Stat:  REPEAT UBlock.    (12)

	.  reduce 12 (src line 70)


state 46
	UBlock:  Block.UNTIL Exp 

	UNTIL  shift 101
	.  error


state 47
	Stat:  IF Conds.END 

	END  shift 102
	.  error


state 48
	Conds:  CondList.    (19)
	Conds:  CondList.ELSE Block 
	CondList:  CondList.ELSEIF Cond 

	ELSEIF  shift 104
	ELSE  shift 103
	.  reduce 19 (src line 83)


state 49
	CondList:  Cond.    (21)

	.  reduce 21 (src line 87)


state 50
	Cond:  Exp.THEN Block 
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 

	AND  shift 72
	OR  shift 71
	THEN  shift 105
	SLTEQ  shift 83
	SGTEQ  shift 84
	SEQ  shift 85
	SNOTEQ  shift 86
	STRADD  shift 74
	<  shift 81
	>  shift 82
	+  shift 76
	-  shift 75
	*  shift 77
	/  shift 78
	%  shift 80
	^  shift 79
	.  error

	LogicOp  goto 73

state 51
	Stat:  FUNCTION FuncName.FuncBody 

	(  shift 92
	.  error

	FuncBody  goto 106
	ParamDefList  goto 91

state 52
	FuncName:  DottedName.    (33)
	FuncName:  DottedName.: NAME 
	DottedName:  DottedName.. NAME 

	:  shift 107
	.  shift 108
	.  reduce 33 (src line 114)


state 53
	DottedName:  NAME.    (35)

	.  reduce 35 (src line 121)


state 54
	Stat:  SetList =.ExpList 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 68
	ExpList  goto 109
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 55
	SetList:  SetList ,.Var 

	NAME  shift 19
	.  error

	FuncCall  goto 41
	Var  goto 110
	PrefixExp  goto 18

state 56
	Binding:  LOCAL NameList.    (27)
	Binding:  LOCAL NameList.= ExpList 
	NameList:  NameList., NAME 

	=  shift 111
	,  shift 112
	.  reduce 27 (src line 99)


state 57
	Binding:  LOCAL FUNCTION.NAME FuncBody 

	NAME  shift 113
	.  error


state 58
	NameList:  NAME.    (82)

	.  reduce 82 (src line 201)


state 59
	Binding:  CLOSURE (.NameList ) 

	NAME  shift 58
	.  error

	NameList  goto 114

state 60
	Repetition:  FOR NAME.= ExpList 
	NameList:  NAME.    (82)

	=  shift 115
	.  reduce 82 (src line 201)


state 61
	Repetition:  FOR NameList.IN ExpList 
	NameList:  NameList., NAME 

	IN  shift 116
	,  shift 112
	.  error


state 62
	Var:  PrefixExp [.Exp ] 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 117
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 63
	Var:  PrefixExp ..NAME 

	NAME  shift 118
	.  error


state 64
	FuncCall:  PrefixExp Args.    (71)

	.  reduce 71 (src line 173)


state 65
	FuncCall:  PrefixExp :.NAME Args 

	NAME  shift 119
	.  error


state 66
	Args:  (.) 
	Args:  (.ExpList ) 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	)  shift 120
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 68
	ExpList  goto 121
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 67
	LastStat:  RETURN ExpList.    (26)
	ExpList:  ExpList., Exp 

	,  shift 122
	.  reduce 26 (src line 97)


state 68
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 
	ExpList:  Exp.    (87)

	AND  shift 72
	OR  shift 71
	SLTEQ  shift 83
	SGTEQ  shift 84
	SEQ  shift 85
	SNOTEQ  shift 86
	STRADD  shift 74
	<  shift 81
	>  shift 82
	+  shift 76
	-  shift 75
	*  shift 77
	/  shift 78
	%  shift 80
	^  shift 79
	.  reduce 87 (src line 210)

	LogicOp  goto 73

state 69
	Stat:  DO Block END.    (9)

	.  reduce 9 (src line 67)


70: shift/reduce conflict (shift 6(0), red'n 7(0)) on DO
70: shift/reduce conflict (shift 16(0), red'n 7(0)) on FOR
70: shift/reduce conflict (shift 11(0), red'n 7(0)) on FUNCTION
70: shift/reduce conflict (shift 10(0), red'n 7(0)) on IF
70: shift/reduce conflict (shift 14(0), red'n 7(0)) on LOCAL
70: shift/reduce conflict (shift 9(0), red'n 7(0)) on REPEAT
70: shift/reduce conflict (shift 7(0), red'n 7(0)) on WHILE
70: shift/reduce conflict (shift 15(0), red'n 7(0)) on CLOSURE
70: shift/reduce conflict (shift 19(0), red'n 7(0)) on NAME
state 70
	Stat:  WHILE Exp DO.Block END 
	StatList: .    (7)

	DO  shift 6
	FOR  shift 16
	FUNCTION  shift 11
	IF  shift 10
	LOCAL  shift 14
	REPEAT  shift 9
	WHILE  shift 7
	CLOSURE  shift 15
	NAME  shift 19
	.  reduce 7 (src line 63)

	Block  goto 123
	StatList  goto 3
	Stat  goto 4
	Binding  goto 5
	Repetition  goto 8
	SetList  goto 12
	FuncCall  goto 13
	Var  goto 17
	PrefixExp  goto 18

state 71
	Exp:  Exp OR.Exp 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 124
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 72
	Exp:  Exp AND.Exp 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 125
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 73
	Exp:  Exp LogicOp.Exp 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 126
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 74
	Exp:  Exp STRADD.Exp 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 127
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 75
	Exp:  Exp -.Exp 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 128
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 76
	Exp:  Exp +.Exp 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 129
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 77
	Exp:  Exp *.Exp 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 130
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 78
	Exp:  Exp /.Exp 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 131
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 79
	Exp:  Exp ^.Exp 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 132
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 80
	Exp:  Exp %.Exp 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 133
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 81
	LogicOp:  <.    (60)

	.  reduce 60 (src line 153)


state 82
	LogicOp:  >.    (61)

	.  reduce 61 (src line 155)


state 83
	LogicOp:  SLTEQ.    (62)

	.  reduce 62 (src line 156)


state 84
	LogicOp:  SGTEQ.    (63)

	.  reduce 63 (src line 157)


state 85
	LogicOp:  SEQ.    (64)

	.  reduce 64 (src line 158)


state 86
	LogicOp:  SNOTEQ.    (65)

	.  reduce 65 (src line 159)


state 87
	Exp:  NOT Exp.    (47)
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 

	^  shift 79
	.  reduce 47 (src line 139)

	LogicOp  goto 73

88: shift/reduce conflict (shift 72(2), red'n 48(0)) on AND
88: shift/reduce conflict (shift 71(1), red'n 48(0)) on OR
88: shift/reduce conflict (shift 83(3), red'n 48(0)) on SLTEQ
88: shift/reduce conflict (shift 84(3), red'n 48(0)) on SGTEQ
88: shift/reduce conflict (shift 85(3), red'n 48(0)) on SEQ
88: shift/reduce conflict (shift 86(3), red'n 48(0)) on SNOTEQ
88: shift/reduce conflict (shift 74(4), red'n 48(0)) on STRADD
88: shift/reduce conflict (shift 81(3), red'n 48(0)) on <
88: shift/reduce conflict (shift 82(3), red'n 48(0)) on >
88: shift/reduce conflict (shift 76(5), red'n 48(0)) on +
88: shift/reduce conflict (shift 75(5), red'n 48(0)) on -
88: shift/reduce conflict (shift 77(6), red'n 48(0)) on *
88: shift/reduce conflict (shift 78(6), red'n 48(0)) on /
88: shift/reduce conflict (shift 80(6), red'n 48(0)) on %
88: shift/reduce conflict (shift 79(8), red'n 48(0)) on ^
state 88
	Exp:  # Exp.    (48)
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 

	AND  shift 72
	OR  shift 71
	SLTEQ  shift 83
	SGTEQ  shift 84
	SEQ  shift 85
	SNOTEQ  shift 86
	STRADD  shift 74
	<  shift 81
	>  shift 82
	+  shift 76
	-  shift 75
	*  shift 77
	/  shift 78
	%  shift 80
	^  shift 79
	.  reduce 48 (src line 140)

	LogicOp  goto 73

state 89
	Exp:  - Exp.    (49)
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 

	^  shift 79
	.  reduce 49 (src line 141)

	LogicOp  goto 73

state 90
	FuncDef:  FUNCTION FuncBody.    (75)

	.  reduce 75 (src line 185)


91: shift/reduce conflict (shift 6(0), red'n 7(0)) on DO
91: shift/reduce conflict (shift 16(0), red'n 7(0)) on FOR
91: shift/reduce conflict (shift 11(0), red'n 7(0)) on FUNCTION
91: shift/reduce conflict (shift 10(0), red'n 7(0)) on IF
91: shift/reduce conflict (shift 14(0), red'n 7(0)) on LOCAL
91: shift/reduce conflict (shift 9(0), red'n 7(0)) on REPEAT
91: shift/reduce conflict (shift 7(0), red'n 7(0)) on WHILE
91: shift/reduce conflict (shift 15(0), red'n 7(0)) on CLOSURE
91: shift/reduce conflict (shift 19(0), red'n 7(0)) on NAME
state 91
	FuncBody:  ParamDefList.Block END 
	StatList: .    (7)

	DO  shift 6
	FOR  shift 16
	FUNCTION  shift 11
	IF  shift 10
	LOCAL  shift 14
	REPEAT  shift 9
	WHILE  shift 7
	CLOSURE  shift 15
	NAME  shift 19
	.  reduce 7 (src line 63)

	Block  goto 134
	StatList  goto 3
	Stat  goto 4
	Binding  goto 5
	Repetition  goto 8
	SetList  goto 12
	FuncCall  goto 13
	Var  goto 17
	PrefixExp  goto 18

state 92
	ParamDefList:  (.ParDefList ) 
	ParDefList: .    (81)

	NAME  shift 58
	MORE  shift 137
	.  reduce 81 (src line 198)

	NameList  goto 136
	ParDefList  goto 135

state 93
	Tableconstructor:  { }.    (89)

	.  reduce 89 (src line 214)


state 94
	Tableconstructor:  { FieldList.} 
	Tableconstructor:  { FieldList., } 
	FieldList:  FieldList., Field 

	,  shift 139
	}  shift 138
	.  error


state 95
	FieldList:  Field.    (92)

	.  reduce 92 (src line 219)


state 96
	Field:  NAME.= Exp 

	=  shift 140
	.  error


state 97
	Field:  [.Exp ] = Exp 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 141
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 98
	Arrayconstructor:  [ ].    (84)

	.  reduce 84 (src line 205)


state 99
	Arrayconstructor:  [ ExpList.] 
	Arrayconstructor:  [ ExpList., ] 
	ExpList:  ExpList., Exp 

	,  shift 143
	]  shift 142
	.  error


state 100
	Stat:  Repetition DO Block.END 

	END  shift 144
	.  error


state 101
	UBlock:  Block UNTIL.Exp 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 145
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 102
	Stat:  IF Conds END.    (13)

	.  reduce 13 (src line 71)


103: shift/reduce conflict (shift 6(0), red'n 7(0)) on DO
103: shift/reduce conflict (shift 16(0), red'n 7(0)) on FOR
103: shift/reduce conflict (shift 11(0), red'n 7(0)) on FUNCTION
103: shift/reduce conflict (shift 10(0), red'n 7(0)) on IF
103: shift/reduce conflict (shift 14(0), red'n 7(0)) on LOCAL
103: shift/reduce conflict (shift 9(0), red'n 7(0)) on REPEAT
103: shift/reduce conflict (shift 7(0), red'n 7(0)) on WHILE
103: shift/reduce conflict (shift 15(0), red'n 7(0)) on CLOSURE
103: shift/reduce conflict (shift 19(0), red'n 7(0)) on NAME
state 103
	Conds:  CondList ELSE.Block 
	StatList: .    (7)

	DO  shift 6
	FOR  shift 16
	FUNCTION  shift 11
	IF  shift 10
	LOCAL  shift 14
	REPEAT  shift 9
	WHILE  shift 7
	CLOSURE  shift 15
	NAME  shift 19
	.  reduce 7 (src line 63)

	Block  goto 146
	StatList  goto 3
	Stat  goto 4
	Binding  goto 5
	Repetition  goto 8
	SetList  goto 12
	FuncCall  goto 13
	Var  goto 17
	PrefixExp  goto 18

state 104
	CondList:  CondList ELSEIF.Cond 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 50
	FuncCall  goto 41
	Cond  goto 147
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

105: shift/reduce conflict (shift 6(0), red'n 7(0)) on DO
105: shift/reduce conflict (shift 16(0), red'n 7(0)) on FOR
105: shift/reduce conflict (shift 11(0), red'n 7(0)) on FUNCTION
105: shift/reduce conflict (shift 10(0), red'n 7(0)) on IF
105: shift/reduce conflict (shift 14(0), red'n 7(0)) on LOCAL
105: shift/reduce conflict (shift 9(0), red'n 7(0)) on REPEAT
105: shift/reduce conflict (shift 7(0), red'n 7(0)) on WHILE
105: shift/reduce conflict (shift 15(0), red'n 7(0)) on CLOSURE
105: shift/reduce conflict (shift 19(0), red'n 7(0)) on NAME
state 105
	Cond:  Exp THEN.Block 
	StatList: .    (7)

	DO  shift 6
	FOR  shift 16
	FUNCTION  shift 11
	IF  shift 10
	LOCAL  shift 14
	REPEAT  shift 9
	WHILE  shift 7
	CLOSURE  shift 15
	NAME  shift 19
	.  reduce 7 (src line 63)

	Block  goto 148
	StatList  goto 3
	Stat  goto 4
	Binding  goto 5
	Repetition  goto 8
	SetList  goto 12
	FuncCall  goto 13
	Var  goto 17
	PrefixExp  goto 18

state 106
	Stat:  FUNCTION FuncName FuncBody.    (14)

	.  reduce 14 (src line 72)


state 107
	FuncName:  DottedName :.NAME 

	NAME  shift 149
	.  error


state 108
	DottedName:  DottedName ..NAME 

	NAME  shift 150
	.  error


state 109
	Stat:  SetList = ExpList.    (15)
	ExpList:  ExpList., Exp 

	,  shift 122
	.  reduce 15 (src line 76)


state 110
	SetList:  SetList , Var.    (32)
	PrefixExp:  Var.    (69)

	=  reduce 32 (src line 112)
	,  reduce 32 (src line 112)
	.  reduce 69 (src line 169)


state 111
	Binding:  LOCAL NameList =.ExpList 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 68
	ExpList  goto 151
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 112
	NameList:  NameList ,.NAME 

	NAME  shift 152
	.  error


state 113
	Binding:  LOCAL FUNCTION NAME.FuncBody 

	(  shift 92
	.  error

	FuncBody  goto 153
	ParamDefList  goto 91

state 114
	Binding:  CLOSURE ( NameList.) 
	NameList:  NameList., NAME 

	)  shift 154
	,  shift 112
	.  error


state 115
	Repetition:  FOR NAME =.ExpList 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 68
	ExpList  goto 155
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 116
	Repetition:  FOR NameList IN.ExpList 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 68
	ExpList  goto 156
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 117
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 
	Var:  PrefixExp [ Exp.] 

	AND  shift 72
	OR  shift 71
	SLTEQ  shift 83
	SGTEQ  shift 84
	SEQ  shift 85
	SNOTEQ  shift 86
	STRADD  shift 74
	<  shift 81
	>  shift 82
	+  shift 76
	-  shift 75
	*  shift 77
	/  shift 78
	%  shift 80
	^  shift 79
	]  shift 157
	.  error

	LogicOp  goto 73

state 118
	Var:  PrefixExp . NAME.    (68)

	.  reduce 68 (src line 164)


state 119
	FuncCall:  PrefixExp : NAME.Args 

	(  shift 66
	.  error

	Args  goto 158

state 120
	Args:  ( ).    (73)

	.  reduce 73 (src line 181)


state 121
	Args:  ( ExpList.) 
	ExpList:  ExpList., Exp 

	)  shift 159
	,  shift 122
	.  error


state 122
	ExpList:  ExpList ,.Exp 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 160
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 123
	Stat:  WHILE Exp DO Block.END 

	END  shift 161
	.  error


state 124
	Exp:  Exp.OR Exp 
	Exp:  Exp OR Exp.    (50)
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 

	AND  shift 72
	SLTEQ  shift 83
	SGTEQ  shift 84
	SEQ  shift 85
	SNOTEQ  shift 86
	STRADD  shift 74
	<  shift 81
	>  shift 82
	+  shift 76
	-  shift 75
	*  shift 77
	/  shift 78
	%  shift 80
	^  shift 79
	.  reduce 50 (src line 142)

	LogicOp  goto 73

state 125
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp AND Exp.    (51)
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 

	SLTEQ  shift 83
	SGTEQ  shift 84
	SEQ  shift 85
	SNOTEQ  shift 86
	STRADD  shift 74
	<  shift 81
	>  shift 82
	+  shift 76
	-  shift 75
	*  shift 77
	/  shift 78
	%  shift 80
	^  shift 79
	.  reduce 51 (src line 143)

	LogicOp  goto 73

126: shift/reduce conflict (shift 72(2), red'n 52(0)) on AND
126: shift/reduce conflict (shift 71(1), red'n 52(0)) on OR
126: shift/reduce conflict (shift 83(3), red'n 52(0)) on SLTEQ
126: shift/reduce conflict (shift 84(3), red'n 52(0)) on SGTEQ
126: shift/reduce conflict (shift 85(3), red'n 52(0)) on SEQ
126: shift/reduce conflict (shift 86(3), red'n 52(0)) on SNOTEQ
126: shift/reduce conflict (shift 74(4), red'n 52(0)) on STRADD
126: shift/reduce conflict (shift 81(3), red'n 52(0)) on <
126: shift/reduce conflict (shift 82(3), red'n 52(0)) on >
126: shift/reduce conflict (shift 76(5), red'n 52(0)) on +
126: shift/reduce conflict (shift 75(5), red'n 52(0)) on -
126: shift/reduce conflict (shift 77(6), red'n 52(0)) on *
126: shift/reduce conflict (shift 78(6), red'n 52(0)) on /
126: shift/reduce conflict (shift 80(6), red'n 52(0)) on %
126: shift/reduce conflict (shift 79(8), red'n 52(0)) on ^
state 126
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp LogicOp Exp.    (52)
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 

	AND  shift 72
	OR  shift 71
	SLTEQ  shift 83
	SGTEQ  shift 84
	SEQ  shift 85
	SNOTEQ  shift 86
	STRADD  shift 74
	<  shift 81
	>  shift 82
	+  shift 76
	-  shift 75
	*  shift 77
	/  shift 78
	%  shift 80
	^  shift 79
	.  reduce 52 (src line 144)

	LogicOp  goto 73

state 127
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp STRADD Exp.    (53)
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 

	STRADD  shift 74
	+  shift 76
	-  shift 75
	*  shift 77
	/  shift 78
	%  shift 80
	^  shift 79
	.  reduce 53 (src line 145)

	LogicOp  goto 73

state 128
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp - Exp.    (54)
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 

	*  shift 77
	/  shift 78
	%  shift 80
	^  shift 79
	.  reduce 54 (src line 146)

	LogicOp  goto 73

state 129
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp + Exp.    (55)
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 

	*  shift 77
	/  shift 78
	%  shift 80
	^  shift 79
	.  reduce 55 (src line 147)

	LogicOp  goto 73

state 130
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp * Exp.    (56)
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 

	^  shift 79
	.  reduce 56 (src line 148)

	LogicOp  goto 73

state 131
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp / Exp.    (57)
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 

	^  shift 79
	.  reduce 57 (src line 149)

	LogicOp  goto 73

state 132
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp ^ Exp.    (58)
	Exp:  Exp.% Exp 

	^  shift 79
	.  reduce 58 (src line 150)

	LogicOp  goto 73

state 133
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 
	Exp:  Exp % Exp.    (59)

	^  shift 79
	.  reduce 59 (src line 151)

	LogicOp  goto 73

state 134
	FuncBody:  ParamDefList Block.END 

	END  shift 162
	.  error


state 135
	ParamDefList:  ( ParDefList.) 

	)  shift 163
	.  error


state 136
	ParDefList:  NameList.    (78)
	ParDefList:  NameList., MORE 
	NameList:  NameList., NAME 

	,  shift 164
	.  reduce 78 (src line 194)


state 137
	ParDefList:  MORE.    (79)

	.  reduce 79 (src line 196)


state 138
	Tableconstructor:  { FieldList }.    (90)

	.  reduce 90 (src line 216)


state 139
	Tableconstructor:  { FieldList ,.} 
	FieldList:  FieldList ,.Field 

	NAME  shift 96
	[  shift 97
	}  shift 165
	.  error

	Field  goto 166

state 140
	Field:  NAME =.Exp 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 167
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 141
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 
	Field:  [ Exp.] = Exp 

	AND  shift 72
	OR  shift 71
	SLTEQ  shift 83
	SGTEQ  shift 84
	SEQ  shift 85
	SNOTEQ  shift 86
	STRADD  shift 74
	<  shift 81
	>  shift 82
	+  shift 76
	-  shift 75
	*  shift 77
	/  shift 78
	%  shift 80
	^  shift 79
	]  shift 168
	.  error

	LogicOp  goto 73

state 142
	Arrayconstructor:  [ ExpList ].    (85)

	.  reduce 85 (src line 207)


state 143
	Arrayconstructor:  [ ExpList ,.] 
	ExpList:  ExpList ,.Exp 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	]  shift 169
	{  shift 42
	.  error

	Exp  goto 160
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 144
	Stat:  Repetition DO Block END.    (11)

	.  reduce 11 (src line 69)


state 145
	UBlock:  Block UNTIL Exp.    (4)
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 

	AND  shift 72
	OR  shift 71
	SLTEQ  shift 83
	SGTEQ  shift 84
	SEQ  shift 85
	SNOTEQ  shift 86
	STRADD  shift 74
	<  shift 81
	>  shift 82
	+  shift 76
	-  shift 75
	*  shift 77
	/  shift 78
	%  shift 80
	^  shift 79
	.  reduce 4 (src line 57)

	LogicOp  goto 73

state 146
	Conds:  CondList ELSE Block.    (20)

	.  reduce 20 (src line 85)


state 147
	CondList:  CondList ELSEIF Cond.    (22)

	.  reduce 22 (src line 89)


state 148
	Cond:  Exp THEN Block.    (23)

	.  reduce 23 (src line 91)


state 149
	FuncName:  DottedName : NAME.    (34)

	.  reduce 34 (src line 116)


state 150
	DottedName:  DottedName . NAME.    (36)

	.  reduce 36 (src line 123)


state 151
	Binding:  LOCAL NameList = ExpList.    (28)
	ExpList:  ExpList., Exp 

	,  shift 122
	.  reduce 28 (src line 101)


state 152
	NameList:  NameList , NAME.    (83)

	.  reduce 83 (src line 203)


state 153
	Binding:  LOCAL FUNCTION NAME FuncBody.    (29)

	.  reduce 29 (src line 102)


state 154
	Binding:  CLOSURE ( NameList ).    (30)

	.  reduce 30 (src line 108)


state 155
	Repetition:  FOR NAME = ExpList.    (17)
	ExpList:  ExpList., Exp 

	,  shift 122
	.  reduce 17 (src line 79)


state 156
	Repetition:  FOR NameList IN ExpList.    (18)
	ExpList:  ExpList., Exp 

	,  shift 122
	.  reduce 18 (src line 81)


state 157
	Var:  PrefixExp [ Exp ].    (67)

	.  reduce 67 (src line 163)


state 158
	FuncCall:  PrefixExp : NAME Args.    (72)

	.  reduce 72 (src line 175)


state 159
	Args:  ( ExpList ).    (74)

	.  reduce 74 (src line 183)


state 160
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 
	ExpList:  ExpList , Exp.    (88)

	AND  shift 72
	OR  shift 71
	SLTEQ  shift 83
	SGTEQ  shift 84
	SEQ  shift 85
	SNOTEQ  shift 86
	STRADD  shift 74
	<  shift 81
	>  shift 82
	+  shift 76
	-  shift 75
	*  shift 77
	/  shift 78
	%  shift 80
	^  shift 79
	.  reduce 88 (src line 212)

	LogicOp  goto 73

state 161
	Stat:  WHILE Exp DO Block END.    (10)

	.  reduce 10 (src line 68)


state 162
	FuncBody:  ParamDefList Block END.    (76)

	.  reduce 76 (src line 188)


state 163
	ParamDefList:  ( ParDefList ).    (77)

	.  reduce 77 (src line 191)


state 164
	ParDefList:  NameList ,.MORE 
	NameList:  NameList ,.NAME 

	NAME  shift 152
	MORE  shift 170
	.  error


state 165
	Tableconstructor:  { FieldList , }.    (91)

	.  reduce 91 (src line 217)


state 166
	FieldList:  FieldList , Field.    (93)

	.  reduce 93 (src line 221)


state 167
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 
	Field:  NAME = Exp.    (94)

	AND  shift 72
	OR  shift 71
	SLTEQ  shift 83
	SGTEQ  shift 84
	SEQ  shift 85
	SNOTEQ  shift 86
	STRADD  shift 74
	<  shift 81
	>  shift 82
	+  shift 76
	-  shift 75
	*  shift 77
	/  shift 78
	%  shift 80
	^  shift 79
	.  reduce 94 (src line 223)

	LogicOp  goto 73

state 168
	Field:  [ Exp ].= Exp 

	=  shift 171
	.  error


state 169
	Arrayconstructor:  [ ExpList , ].    (86)

	.  reduce 86 (src line 208)


state 170
	ParDefList:  NameList , MORE.    (80)

	.  reduce 80 (src line 197)


state 171
	Field:  [ Exp ] =.Exp 

	FALSE  shift 28
	FUNCTION  shift 39
	NIL  shift 26
	NOT  shift 36
	TRUE  shift 27
	NUMBER  shift 29
	STRING  shift 30
	NAME  shift 19
	MORE  shift 31
	-  shift 38
	#  shift 37
	[  shift 43
	{  shift 42
	.  error

	Exp  goto 172
	FuncCall  goto 41
	Var  goto 40
	FuncDef  goto 32
	PrefixExp  goto 33
	Tableconstructor  goto 34
	Arrayconstructor  goto 35

state 172
	Exp:  Exp.OR Exp 
	Exp:  Exp.AND Exp 
	Exp:  Exp.LogicOp Exp 
	Exp:  Exp.STRADD Exp 
	Exp:  Exp.- Exp 
	Exp:  Exp.+ Exp 
	Exp:  Exp.* Exp 
	Exp:  Exp./ Exp 
	Exp:  Exp.^ Exp 
	Exp:  Exp.% Exp 
	Field:  [ Exp ] = Exp.    (95)

	AND  shift 72
	OR  shift 71
	SLTEQ  shift 83
	SGTEQ  shift 84
	SEQ  shift 85
	SNOTEQ  shift 86
	STRADD  shift 74
	<  shift 81
	>  shift 82
	+  shift 76
	-  shift 75
	*  shift 77
	/  shift 78
	%  shift 80
	^  shift 79
	.  reduce 95 (src line 228)

	LogicOp  goto 73

55 terminals, 31 nonterminals
96 grammar rules, 173/2000 states
102 shift/reduce, 0 reduce/reduce conflicts reported
80 working sets used
memory: parser 462/30000
123 extra closures
763 shift entries, 9 exceptions
104 goto entries
243 entries saved by goto default
Optimizer space used: output 487/30000
487 table entries, 130 zero
maximum spread: 55, maximum offset: 171
